{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/composables/useAriaInvalid.ts", "../../bootstrap-vue-next/src/composables/useStateClass.ts"],
  "sourcesContent": ["import type {AriaInvalid} from '../types/AriaInvalid'\nimport {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useAriaInvalid = (\n  ariaInvalid: MaybeRefOrGetter<AriaInvalid | undefined>,\n  state: MaybeRefOrGetter<boolean | null | undefined>\n) =>\n  computed(() => {\n    const resolvedAriaInvalid = toValue(ariaInvalid)\n    const resolvedState = toValue(state)\n\n    const resolvedAriaInvalidValue =\n      resolvedAriaInvalid === true\n        ? 'true'\n        : typeof resolvedAriaInvalid === 'string'\n          ? resolvedAriaInvalid\n          : resolvedState === false\n            ? 'true'\n            : resolvedAriaInvalid === false\n              ? 'false'\n              : undefined\n\n    return resolvedAriaInvalidValue\n  })\n", "import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport type {ValidationState} from '../types/CommonTypes'\n\nexport const useStateClass = (value: MaybeRefOrGetter<ValidationState>) =>\n  computed(() => {\n    const resolvedValue = toValue(value)\n\n    return resolvedValue === true ? 'is-valid' : resolvedValue === false ? 'is-invalid' : null\n  })\n"],
  "mappings": ";;;;;;AAGO,IAAM,iBAAiB,CAC5B,aACA,UAEA,SAAS,MAAM;AACP,QAAA,sBAAsB,QAAQ,WAAW;AACzC,QAAA,gBAAgB,QAAQ,KAAK;AAEnC,QAAM,2BACJ,wBAAwB,OACpB,SACA,OAAO,wBAAwB,WAC7B,sBACA,kBAAkB,QAChB,SACA,wBAAwB,QACtB,UACA;AAEL,SAAA;AACT,CAAC;;;ACpBI,IAAM,gBAAgB,CAAC,UAC5B,SAAS,MAAM;AACP,QAAA,gBAAgB,QAAQ,KAAK;AAEnC,SAAO,kBAAkB,OAAO,aAAa,kBAAkB,QAAQ,eAAe;AACxF,CAAC;",
  "names": []
}
