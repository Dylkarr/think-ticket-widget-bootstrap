{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/composables/useModalManager.ts", "../../bootstrap-vue-next/src/composables/useModalController/index.ts", "../../bootstrap-vue-next/src/components/BModal/BModal.vue", "../../bootstrap-vue-next/src/components/BModal/BModalOrchestrator.vue"],
  "sourcesContent": ["import {getSSRHandler, tryOnScopeDispose, unrefElement} from '@vueuse/core'\nimport {\n  type ComponentInternalInstance,\n  computed,\n  getCurrentInstance,\n  inject,\n  type Ref,\n  toValue,\n  watch,\n} from 'vue'\nimport {modalManagerPluginKey} from '../utils/keys'\n\nconst modalOpenClassName = 'modal-open'\n\nexport const useSharedModalStack = () => {\n  const modalManagerPlugin = inject(modalManagerPluginKey)\n\n  /**\n   * Removes an item from both the stack and registry\n   */\n  const dispose = (modal: Readonly<ComponentInternalInstance>): void => {\n    modalManagerPlugin?.removeStack(modal)\n    modalManagerPlugin?.removeRegistry(modal)\n  }\n\n  const updateHTMLAttrs = getSSRHandler('updateHTMLAttrs', (selector, attribute, value) => {\n    const el =\n      typeof selector === 'string'\n        ? window?.document.querySelector(selector)\n        : unrefElement(selector)\n    if (!el) return\n\n    if (attribute === 'class') {\n      el.classList.toggle(modalOpenClassName, value === modalOpenClassName)\n    } else {\n      el.setAttribute(attribute, value)\n    }\n  })\n\n  tryOnScopeDispose(() => {\n    updateHTMLAttrs('body', 'class', '')\n  })\n\n  watch(\n    () => modalManagerPlugin?.countStack.value,\n    (newValue) => {\n      if (newValue === undefined) return\n      updateHTMLAttrs('body', 'class', newValue > 0 ? modalOpenClassName : '')\n    }\n  )\n\n  return {\n    ...modalManagerPlugin,\n    dispose,\n  }\n}\n\nexport const useModalManager = (modalOpen: Readonly<Ref<boolean>>, initialValue: boolean) => {\n  const {pushRegistry, pushStack, removeStack, stack, dispose, countStack} = useSharedModalStack()\n\n  const currentModal = getCurrentInstance()\n\n  if (!currentModal || currentModal.type.__name !== 'BModal') {\n    throw new Error('useModalManager must only use in BModal component')\n  }\n\n  pushRegistry?.(currentModal)\n\n  tryOnScopeDispose(() => {\n    dispose(currentModal)\n  })\n\n  const setInStack = (newValue: boolean, oldValue: boolean) => {\n    if (newValue) {\n      pushStack?.(currentModal)\n    } else if (oldValue && !newValue) {\n      removeStack?.(currentModal)\n    }\n  }\n\n  // (initialValue, initialValue) is meant to always only ever trigger the first `if (newValue) {` block. The other block is skipped _always_\n  setInStack(initialValue, initialValue)\n\n  watch(modalOpen, setInStack)\n\n  return {\n    activePosition: computed(() =>\n      stack?.value.findIndex((el) => toValue(el.exposed?.id) === toValue(currentModal.exposed?.id))\n    ),\n    activeModalCount: countStack,\n    stackWithoutSelf: computed(\n      () =>\n        stack?.value.filter(\n          (el) => toValue(el.exposed?.id) !== toValue(currentModal.exposed?.id)\n        ) ?? []\n    ),\n  }\n}\n", "import {\n  type ComponentInternalInstance,\n  computed,\n  getCurrentInstance,\n  inject,\n  ref,\n  toValue,\n} from 'vue'\nimport {modalControllerPluginKey} from '../../utils/keys'\nimport type {\n  ControllerKey,\n  PromiseWithModal,\n  PromiseWithModalBoolean,\n} from '../../types/ComponentOrchestratorTypes'\nimport {useSharedModalStack} from '../../composables/useModalManager'\n\nexport const useModalController = () => {\n  const noopPromise = () => {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'useModalController() was called outside of the setup() function! or the plugin is not provided.'\n    )\n    return Promise.resolve(null) as unknown as PromiseWithModal\n  }\n  const modalControllerPlugin = inject(modalControllerPluginKey, {\n    modals: ref(new Map()),\n    _isOrchestratorInstalled: ref(false),\n    create: noopPromise,\n    show: noopPromise as () => PromiseWithModalBoolean,\n    confirm: noopPromise as () => PromiseWithModalBoolean,\n  })\n  if (modalControllerPlugin.create === noopPromise) {\n    throw Error(\n      'useModalController() was called outside of the setup() function! or the plugin is not provided.'\n    )\n  }\n\n  const {lastStack, stack, registry} = useSharedModalStack()\n  const hide = (trigger?: string, id?: ControllerKey) => {\n    if (id === undefined) {\n      if (id === undefined && lastStack?.value) {\n        lastStack?.value.exposed?.hide(trigger)\n      }\n    } else {\n      const stackModal = stack?.value.find((modal) => modal.exposed?.id === id)\n      if (stackModal) {\n        stackModal.exposed?.hide(trigger)\n        return\n      }\n      const modal = modalControllerPlugin.modals.value.get(id)\n      if (modal) {\n        modal.modelValue = false\n        modal['onUpdate:modelValue']?.(false)\n      } else {\n        stack?.value.forEach((modal) => {\n          if (modal.exposed?.id === id) {\n            modal.exposed?.hide(trigger, true)\n          }\n        })\n      }\n    }\n  }\n\n  const hideAll = (trigger?: string) => {\n    stack?.value.forEach((modal) => {\n      modal.exposed?.hide(trigger, true)\n    })\n  }\n\n  const get = (id: ControllerKey) => {\n    if (modalControllerPlugin.modals.value.get(id)) {\n      const modal = modalControllerPlugin.modals.value.get(id)\n      return {\n        modal,\n        show() {\n          modal?.promise.value.show()\n        },\n        hide(trigger?: string) {\n          modal?.promise.value.hide(trigger)\n        },\n      }\n    }\n    if (registry?.value) {\n      for (const [, modal] of registry?.value.entries() ?? []) {\n        if (toValue(modal.exposed?.id) === id) {\n          return {\n            modal,\n            show() {\n              modal.exposed?.show()\n            },\n            hide(trigger?: string) {\n              modal.exposed?.hide(trigger, true)\n            },\n          }\n        }\n      }\n    }\n    return null\n  }\n\n  const instance = getCurrentInstance()\n  const current = () => {\n    const findBModal = (component: ComponentInternalInstance): ComponentInternalInstance | null => {\n      if (!component.parent) {\n        return null\n      }\n      if (component.parent.type.__name === 'BModal') {\n        return component.parent\n      }\n      return findBModal(component.parent)\n    }\n    if (!instance) {\n      return null\n    }\n    const modalComponent = computed(() => findBModal(instance))\n    const modal = computed(() => modalComponent.value?.proxy)\n    return {\n      show() {\n        modalComponent.value?.exposed?.show()\n      },\n      hide(trigger?: string) {\n        modalComponent.value?.exposed?.hide(trigger, true)\n      },\n      modal,\n    }\n  }\n\n  return {\n    hide,\n    hideAll,\n    get,\n    current,\n    ...modalControllerPlugin,\n    // Todo: Supports listening events globally in the future\n  }\n}\n", "<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <Transition\n      v-if=\"renderRef || contentShowing\"\n      v-bind=\"transitionProps\"\n      :appear=\"modelValue || props.visible\"\n    >\n      <div\n        v-show=\"showRef && ((backdropReady && props.backdropFirst) || !props.backdropFirst)\"\n        :id=\"computedId\"\n        ref=\"_element\"\n        class=\"modal\"\n        :class=\"[\n          props.modalClass,\n          {\n            fade: !computedNoAnimation,\n            show: isVisible,\n            ...sharedClasses,\n          },\n        ]\"\n        role=\"dialog\"\n        :aria-labelledby=\"!props.noHeader ? `${computedId}-label` : undefined\"\n        :aria-describedby=\"`${computedId}-body`\"\n        tabindex=\"-1\"\n        v-bind=\"$attrs\"\n        :style=\"computedZIndex\"\n        style=\"display: block\"\n        @mousedown.left.self=\"hide('backdrop')\"\n      >\n        <div class=\"modal-dialog\" :class=\"modalDialogClasses\">\n          <div v-if=\"contentShowing\" class=\"modal-content\" :class=\"props.contentClass\">\n            <div v-if=\"!props.noHeader\" class=\"modal-header\" :class=\"headerClasses\">\n              <slot name=\"header\" v-bind=\"sharedSlots\">\n                <component\n                  :is=\"props.titleTag\"\n                  :id=\"`${computedId}-label`\"\n                  class=\"modal-title\"\n                  :class=\"titleClasses\"\n                >\n                  <slot name=\"title\" v-bind=\"sharedSlots\">\n                    {{ props.title }}\n                  </slot>\n                </component>\n                <template v-if=\"!props.noHeaderClose\">\n                  <BButton\n                    v-if=\"hasHeaderCloseSlot\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  >\n                    <slot name=\"header-close\" v-bind=\"sharedSlots\" />\n                  </BButton>\n                  <BCloseButton\n                    v-else\n                    :aria-label=\"props.headerCloseLabel\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hide('close')\"\n                  />\n                </template>\n              </slot>\n            </div>\n            <div\n              :id=\"`${computedId}-body`\"\n              class=\"modal-body\"\n              :class=\"bodyClasses\"\n              v-bind=\"props.bodyAttrs\"\n            >\n              <slot v-bind=\"sharedSlots\">\n                {{ props.body }}\n              </slot>\n            </div>\n            <div v-if=\"!props.noFooter\" class=\"modal-footer\" :class=\"footerClasses\">\n              <slot name=\"footer\" v-bind=\"sharedSlots\">\n                <slot name=\"cancel\" v-bind=\"sharedSlots\">\n                  <BButton\n                    v-if=\"!props.okOnly\"\n                    ref=\"_cancelButton\"\n                    :disabled=\"disableCancel\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.cancelVariant\"\n                    :class=\"props.cancelClass\"\n                    @click=\"hide('cancel')\"\n                  >\n                    {{ props.cancelTitle }}\n                  </BButton>\n                </slot>\n                <slot name=\"ok\" v-bind=\"sharedSlots\">\n                  <BButton\n                    ref=\"_okButton\"\n                    :disabled=\"disableOk\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.okVariant\"\n                    :class=\"props.okClass\"\n                    @click=\"hide('ok')\"\n                  >\n                    {{ props.okTitle }}\n                  </BButton>\n                </slot>\n              </slot>\n            </div>\n          </div>\n        </div>\n        <div\n          v-if=\"needsFallback\"\n          ref=\"_fallbackFocusElement\"\n          :class=\"fallbackClassSelector\"\n          tabindex=\"0\"\n          style=\"width: 0; height: 0; overflow: hidden\"\n        />\n      </div>\n    </Transition>\n    <slot v-if=\"!props.noBackdrop\" name=\"backdrop\" v-bind=\"sharedSlots\">\n      <Transition v-if=\"renderBackdropRef\" v-bind=\"backdropTransitionProps\">\n        <div\n          v-show=\"showRef || (isLeaving && props.backdropFirst && !computedNoAnimation)\"\n          class=\"modal-backdrop\"\n          :style=\"computedZIndexBackdrop\"\n          :class=\"{\n            fade: !computedNoAnimation,\n            show: backdropVisible || computedNoAnimation,\n            ...sharedClasses,\n          }\"\n          @click=\"hide('backdrop')\"\n        />\n      </Transition>\n    </slot>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, unrefElement} from '@vueuse/core'\nimport {useActivatedFocusTrap} from '../../composables/useActivatedFocusTrap'\nimport {\n  computed,\n  type CSSProperties,\n  type EmitFn,\n  nextTick,\n  onMounted,\n  ref,\n  useTemplateRef,\n  watch,\n} from 'vue'\nimport type {BModalProps} from '../../types/ComponentProps'\nimport type {BModalEmits} from '../../types/ComponentEmits'\nimport type {BModalSlots, BModalSlotsData} from '../../types/ComponentSlots'\n\nimport BButton from '../BButton/BButton.vue'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useSafeScrollLock} from '../../composables/useSafeScrollLock'\nimport {getModalZIndex, isEmptySlot} from '../../utils/dom'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useModalManager} from '../../composables/useModalManager'\nimport {useShowHide} from '../../composables/useShowHide'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {getElement} from '../../utils/getElement'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<Omit<BModalProps, 'modelValue'>>(), {\n  focus: undefined,\n  backdropFirst: false,\n  body: undefined,\n  bodyBgVariant: null,\n  bodyAttrs: undefined,\n  bodyClass: null,\n  bodyScrolling: false,\n  bodyTextVariant: null,\n  bodyVariant: null,\n  busy: false,\n  buttonSize: 'md',\n  cancelClass: undefined,\n  cancelDisabled: false,\n  cancelTitle: 'Cancel',\n  cancelVariant: 'secondary',\n  centered: false,\n  contentClass: undefined,\n  dialogClass: undefined,\n  footerBgVariant: null,\n  footerBorderVariant: null,\n  footerClass: undefined,\n  footerTextVariant: null,\n  footerVariant: null,\n  fullscreen: false,\n  headerBgVariant: null,\n  headerBorderVariant: null,\n  headerClass: undefined,\n  headerCloseClass: undefined,\n  headerCloseLabel: 'Close',\n  headerCloseVariant: 'secondary',\n  headerTextVariant: null,\n  headerVariant: null,\n  noFooter: false,\n  noHeader: false,\n  noHeaderClose: false,\n  id: undefined,\n  initialAnimation: false,\n  lazy: false,\n  modalClass: undefined,\n  noBackdrop: false,\n  noCloseOnBackdrop: false,\n  noCloseOnEsc: false,\n  noFade: false,\n  noTrap: false,\n  okClass: undefined,\n  okDisabled: false,\n  okOnly: false,\n  okTitle: 'OK',\n  okVariant: 'primary',\n  unmountLazy: false,\n  scrollable: false,\n  size: 'md',\n  teleportDisabled: false,\n  teleportTo: 'body',\n  title: undefined,\n  titleClass: undefined,\n  titleVisuallyHidden: false,\n  titleTag: 'h5',\n  show: false,\n  transProps: undefined,\n  visible: false,\n})\nconst props = useDefaults(_props, 'BModal')\n\nconst emit = defineEmits<BModalEmits>()\n\nconst slots = defineSlots<BModalSlots>()\n\nconst computedId = useId(() => props.id, 'modal')\n// Note: passive: true will sync an internal ref... This is required for useModalManager to exit,\n// Since the modelValue that's passed from that composable is not reactive, this internal ref _is_ and thus it will trigger closing the modal\nconst modelValue = defineModel<Exclude<BModalProps['modelValue'], undefined>>({default: false})\n\nconst element = useTemplateRef<HTMLElement>('_element')\nconst fallbackFocusElement = useTemplateRef<HTMLElement>('_fallbackFocusElement')\nconst okButton = useTemplateRef<HTMLElement>('_okButton')\nconst cancelButton = useTemplateRef<HTMLElement>('_cancelButton')\nconst closeButton = useTemplateRef<HTMLElement>('_closeButton')\n\nconst pickFocusItem = () => {\n  if (props.focus && typeof props.focus !== 'boolean') {\n    if (props.focus === 'ok') {\n      return okButton\n    } else if (props.focus === 'close') {\n      return closeButton\n    } else if (props.focus === 'cancel') {\n      return cancelButton\n    }\n    return getElement(props.focus, element.value ?? undefined) ?? element.value\n  }\n  return element\n}\n\nlet activeElement: HTMLElement | null = null\nconst onAfterEnter = () => {\n  if (props.noTrap && props.focus !== false) {\n    activeElement = document.activeElement as HTMLElement\n    if (activeElement === element.value) {\n      activeElement = null\n    }\n    const el = unrefElement(pickFocusItem())\n    if (!el) return\n    el?.focus()\n    if (\n      el.tagName &&\n      el.tagName.toLowerCase() === 'input' &&\n      typeof (el as HTMLInputElement).select === 'function'\n    ) {\n      ;(el as HTMLInputElement).select()\n    }\n  }\n}\n\nconst onAfterLeave = () => {\n  if (props.noTrap && props.focus !== false && activeElement) {\n    activeElement?.focus()\n    activeElement = null\n  }\n}\n\nconst {\n  showRef,\n  renderRef,\n  renderBackdropRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  backdropTransitionProps,\n  isLeaving,\n  isVisible,\n  trapActive,\n  contentShowing,\n  backdropReady,\n  backdropVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, element, computedId, {\n  // addShowClass: false,\n  transitionProps: {\n    onAfterEnter,\n    onAfterLeave,\n  },\n})\n\nconst fallbackClassSelector = 'modal-fallback-focus'\nconst {needsFallback} = useActivatedFocusTrap({\n  element,\n  isActive: trapActive,\n  noTrap: () => props.noTrap,\n  fallbackFocus: {\n    ref: fallbackFocusElement,\n    classSelector: fallbackClassSelector,\n  },\n  focus: () => (props.focus === false ? false : (unrefElement(pickFocusItem()) ?? undefined)),\n  // () => (typeof focus === 'boolean' ? focus : (unrefElement(focus) ?? undefined)),\n})\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide('esc')\n  },\n  {target: element}\n)\nuseSafeScrollLock(showRef, () => props.bodyScrolling)\n\nconst hasHeaderCloseSlot = computed(() => !isEmptySlot(slots['header-close']))\n\nconst modalDialogClasses = computed(() => [\n  props.dialogClass,\n  {\n    'modal-fullscreen': props.fullscreen === true,\n    [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === 'string',\n    [`modal-${props.size}`]: props.size !== 'md',\n    'modal-dialog-centered': props.centered,\n    'modal-dialog-scrollable': props.scrollable,\n  },\n])\n\nconst bodyColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.bodyBgVariant,\n  textVariant: props.bodyTextVariant,\n  variant: props.bodyVariant,\n}))\nconst bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value])\n\nconst headerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.headerBgVariant,\n  textVariant: props.headerTextVariant,\n  variant: props.headerVariant,\n  borderVariant: props.headerBorderVariant,\n}))\nconst headerClasses = computed(() => [props.headerClass, headerColorClasses.value])\n\nconst headerCloseAttrs = computed(() => ({\n  variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : undefined,\n  class: props.headerCloseClass,\n}))\n\nconst footerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.footerBgVariant,\n  textVariant: props.footerTextVariant,\n  variant: props.footerVariant,\n  borderVariant: props.footerBorderVariant,\n}))\nconst footerClasses = computed(() => [props.footerClass, footerColorClasses.value])\n\nconst titleClasses = computed(() => [\n  props.titleClass,\n  {\n    ['visually-hidden']: props.titleVisuallyHidden,\n  },\n])\n\nconst disableCancel = computed(() => props.cancelDisabled || props.busy)\nconst disableOk = computed(() => props.okDisabled || props.busy)\n\nconst {activePosition, activeModalCount, stackWithoutSelf} = useModalManager(\n  showRef,\n  modelValue.value\n)\n\nconst sharedClasses = computed(() => ({\n  [`stack-position-${activePosition?.value ?? 0}`]: true,\n  [`stack-inverse-position-${(activeModalCount?.value ?? 1) - 1 - (activePosition?.value ?? 0)}`]:\n    true,\n}))\n\nwatch(stackWithoutSelf, (newValue, oldValue) => {\n  if (newValue.length > oldValue.length && showRef.value === true && props.noStacking === true)\n    hide()\n})\n\nconst defaultModalDialogZIndex = ref(\n  getModalZIndex(element.value ?? (typeof document !== 'undefined' ? document.body : undefined))\n)\n\nonMounted(() => {\n  watch(\n    renderRef,\n    (v) => {\n      if (!v) return\n      nextTick(() => {\n        if (!element.value) return\n        defaultModalDialogZIndex.value = getModalZIndex(element.value)\n      })\n    },\n    {immediate: true}\n  )\n})\n\nconst computedZIndexNumber = computed<number>(() =>\n  // Make sure that newly opened modals have a higher z-index than currently active ones.\n  // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n  //\n  // This means inactive modals will already be higher than active ones when opened.\n\n  showRef.value || isLeaving.value\n    ? // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n      defaultModalDialogZIndex.value -\n      ((activeModalCount?.value ?? 0) * 2 - (activePosition?.value ?? 0) * 2)\n    : defaultModalDialogZIndex.value\n)\nconst computedZIndex = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value,\n  '--b-position': activePosition?.value ?? 0,\n  '--b-inverse-position': (activeModalCount?.value ?? 1) - 1 - (activePosition?.value ?? 0),\n  '--b-count': activeModalCount?.value ?? 0,\n}))\nconst computedZIndexBackdrop = computed<CSSProperties>(() => ({\n  'z-index': computedZIndexNumber.value - 1,\n  '--b-position': activePosition?.value ?? 0,\n  '--b-inverse-position': (activeModalCount?.value ?? 1) - 1 - (activePosition?.value ?? 0),\n  '--b-count': activeModalCount?.value ?? 0,\n}))\n\nconst sharedSlots = computed<BModalSlotsData>(() => ({\n  id: computedId.value,\n  cancel: () => {\n    hide('cancel')\n  },\n  close: () => {\n    hide('close')\n  },\n  hide,\n  show,\n  toggle,\n  ok: () => {\n    hide('ok')\n  },\n  active: showRef.value,\n  visible: showRef.value,\n}))\n\ndefineExpose({\n  hide,\n  id: computedId,\n  show,\n  toggle,\n  visible: showRef,\n})\n</script>\n", "<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__modal-container\" v-bind=\"$attrs\">\n      <component\n        :is=\"_component ?? BModal\"\n        v-for=\"[key, {component: _component, promise, options, slots, ...val}] in tools.modals\n          ?.value\"\n        :key=\"key\"\n        :ref=\"(ref: ComponentPublicInstance) => (promise.value.ref = ref)\"\n        v-bind=\"val\"\n        initial-animation\n        :teleport-disabled=\"true\"\n        @hide=\"\n          (e: BvTriggerableEvent) => {\n            e.ok = e.trigger === 'ok' ? true : e.trigger === 'cancel' ? false : null\n            val.onHide?.(e)\n            if (e.defaultPrevented) {\n              return\n            }\n            promise.stop?.()\n            if (options?.resolveOnHide) {\n              promise.resolve(options.returnBoolean ? e.ok : e)\n            }\n          }\n        \"\n        @hidden=\"\n          (e: BvTriggerableEvent) => {\n            e.ok = e.trigger === 'ok' ? true : e.trigger === 'cancel' ? false : null\n            val.onHidden?.(e)\n            if (e.defaultPrevented) {\n              return\n            }\n            if (!options?.resolveOnHide) {\n              promise.resolve(options.returnBoolean ? e.ok : e)\n            }\n            if (!options?.keep) {\n              promise.value.destroy?.()\n            }\n          }\n        \"\n      >\n        <template v-for=\"(comp, slot) in slots\" #[slot]=\"scope\" :key=\"slot\">\n          <component :is=\"comp\" v-bind=\"scope\" />\n        </template>\n      </component>\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BvTriggerableEvent} from '../../utils'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BModalOrchestratorProps} from '../../types/ComponentProps'\nimport BModal from './BModal.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useModalController} from '../../composables/useModalController'\nimport type {ComponentPublicInstance} from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BModalOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n})\nconst props = useDefaults(_props, 'BModalOrchestrator')\n\nconst tools = useModalController()\ntools._isOrchestratorInstalled.value = true\n\ndefineExpose({\n  ...tools,\n})\n</script>\n"],
  "mappings": "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",
  "names": ["modal", "_a", "_useSlots", "_useModel"]
}
