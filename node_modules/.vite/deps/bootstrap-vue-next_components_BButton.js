import {
  _sfc_main,
  _sfc_main2
} from "./chunk-BRRGM6JM.js";
import "./chunk-D2XVSFAV.js";
import "./chunk-6QZYBF2E.js";
import "./chunk-GKNO3VYA.js";
import "./chunk-V3MKGUW2.js";
import "./chunk-URUJ4MHO.js";
import "./chunk-ZFN7TK3H.js";
import {
  buttonGroupKey,
  useDefaults
} from "./chunk-SPNV4TFH.js";
import {
  computed,
  createBlock,
  createElementBlock,
  defineComponent,
  normalizeClass,
  openBlock,
  provide,
  renderSlot,
  resolveDynamicComponent,
  unref,
  withCtx
} from "./chunk-UDDKWPKO.js";
import "./chunk-PZ5AY32C.js";

// node_modules/bootstrap-vue-next/dist/BButtonToolbar.vue_vue_type_script_setup_true_lang-BSwHiGXg.mjs
var _sfc_main$1 = defineComponent({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: { default: "md" },
    tag: { default: "div" },
    vertical: { type: Boolean, default: false }
  },
  setup(__props) {
    provide(buttonGroupKey, true);
    const _props = __props;
    const props = useDefaults(_props, "BButtonGroup");
    const computedClasses = computed(() => ({
      "btn-group": !props.vertical,
      [`btn-group-${props.size}`]: props.size !== "md",
      "btn-group-vertical": props.vertical
    }));
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(unref(props).tag), {
        class: normalizeClass(computedClasses.value),
        role: "group",
        "aria-label": unref(props).ariaLabel
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class", "aria-label"]);
    };
  }
});
var _hoisted_1 = ["role", "aria-label"];
var _sfc_main3 = defineComponent({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { type: Boolean, default: false },
    role: { default: "toolbar" }
  },
  setup(__props) {
    const _props = __props;
    const props = useDefaults(_props, "BButtonToolbar");
    const computedClasses = computed(() => ({
      "justify-content-between": props.justify
    }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass([computedClasses.value, "btn-toolbar"]),
        role: unref(props).role,
        "aria-label": unref(props).ariaLabel
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 10, _hoisted_1);
    };
  }
});
export {
  _sfc_main as BButton,
  _sfc_main$1 as BButtonGroup,
  _sfc_main3 as BButtonToolbar,
  _sfc_main2 as BCloseButton
};
//# sourceMappingURL=bootstrap-vue-next_components_BButton.js.map
